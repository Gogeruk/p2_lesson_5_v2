/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\



По задумке метод save должен отрабатывать как для
сохранения новой сущности, так и для обновления уже существующей.


substr(mb_strtolower(static::class), -4)
 -- очень плохо. Если будет не User, а Category, то что тогда?..











/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\v








Реализовать абстрактный класс Model. В классе должно быть 4 метода:

- статический find($id)

- create, update

- delete

////////////////////////////////////////////////


Создать класс User, который будет
 наследовать класс Model и генерировать SQL код
 для каждого действия:
 create, read, update, delete
        (как это было показано на уроке).


////////////////////////////////////////////////



* Объединить методы
 create, update в метод save
 и реализовать механизм автоматического выбора
 между методами create и $update.


////////////////////////////////////////////////

code sample   should look loke this:
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\

abstract class Model
{
    // ваша реализация
}

final class User
{
    protected $id;
    protected $name;
    protected $email;
}

$user = User::find(1);
var_dump($user); // SELECT * FROM user WHERE id = :id

$user->name = 'John';
$result = $user->save();
var_dump($result); // UPDATE user SET name = :name, email = 'email' WHERE id = :id

$result = $user->delete();
var_dump($result); // DELETE user WHERE id = :id

$user = new User;
$user->name = 'John';
$user->email = 'some@gmail.com';
$result = $user->save();
var_dump($result); // INSERT INTO user (id, name, email) VALUES (:id, :name, :email)


////////////////////////////////////////////////













































///
